CREATE TABLE PROFESOR(
    DNI VARCHAR(9) NOT NULL,
    NOMBRE VARCHAR(40) NOT NULL,
    AP1 VARCHAR(40) NOT NULL,
    AP2 VARCHAR(40),
    DIRECCION VARCHAR(30) NOT NULL,
    CUENTA VARCHAR(10) NOT NULL,
    TELEFONO NUMBER(9) NOT NULL,
    -- P · DNI
    CONSTRAINT PK_PROFESOR PRIMARY KEY(DNI)
);

CREATE TABLE CICLO_FORM(
    COD_CICLO NUMBER(4) NOT NULL,
    NOMBRE VARCHAR(30) NOT NULL,
    TIPO VARCHAR(30) NOT NULL,
    -- P · COD_CICLO
    CONSTRAINT PK_CICLO_FORM PRIMARY KEY(COD_CICLO)
);

CREATE TABLE ASIGNATURA(
    COD_ASIG VARCHAR(5) NOT NULL,
    NOMBRE VARCHAR(30) NOT NULL,
    NUM_HORAS NUMBER(2) NOT NULL,
    -- P · COD_ASIG
    CONSTRAINT PK_ASIGNATURA PRIMARY KEY(COD_ASIG),
    -- F · DNI --> PROFESOR
    DNI_PROFESOR VARCHAR(9) NOT NULL,
    CONSTRAINT FK_PROFESOR FOREIGN KEY(DNI_PROFESOR) REFERENCES PROFESOR(DNI),
    -- F · COD_CICLO --> CICLO_FORM
    COD_CICLO NUMBER(4) NOT NULL,
    CONSTRAINT FK_CICLO_FORM FOREIGN KEY(COD_CICLO) REFERENCES CICLO_FORM(COD_CICLO)
);

CREATE TABLE IDIOMA(
    COD_IDIOMA NUMBER(4) NOT NULL,
    DESCRIPCION VARCHAR(20) NOT NULL,
    -- P · COD_IDIOMA
    CONSTRAINT PK_IDIOMA PRIMARY KEY(COD_IDIOMA)
);

CREATE TABLE ALUMNO(
    DNI VARCHAR(9) NOT NULL,
    NOMBRE VARCHAR(40) NOT NULL,
    AP1 VARCHAR(40) NOT NULL,
    AP2 VARCHAR(40),
    DIRECCION VARCHAR(30) NOT NULL,
    EMAIL VARCHAR(30) NOT NULL,
    TELEFONO NUMBER(9) NOT NULL,
    -- P · DNI
    CONSTRAINT PK_ALUMNO PRIMARY KEY(DNI),
    -- FN · COD_IDIOMA --> IDIOMA
    COD_IDIOMA NUMBER(4) NULL, -- FOREIGN KEY NULA
    CONSTRAINT FK_IDIOMA FOREIGN KEY(COD_IDIOMA) REFERENCES IDIOMA(COD_IDIOMA)
);

CREATE TABLE MATRICULA(
    -- PF · DNI --> ALUMNO
    DNI VARCHAR(2) NOT NULL,
    -- PF · COD_ASIG --> ASIGNATURA
    COD_ASIG NUMBER(4) NOT NULL,
    
    CONSTRAINT PK_MATRICULA PRIMARY KEY(DNI, COD_ASIG),
    CONSTRAINT FK_ALUMNO FOREIGN KEY(DNI) REFERENCES ALUMNO(DNI),
    CONSTRAINT FK_ASIGNATURA FOREIGN KEY(COD_ASIG) REFERENCES ASIGNATURA(COD_ASIG)
);

CREATE TABLE IDIOMAS_PROF(
    -- PF · COD_IDIOMA --> IDIOMA
    COD_IDIOMA NUMBER(4) NOT NULL,
    -- PF · DNI --> PROFESOR
    DNI VARCHAR(9) NOT NULL,

    CONSTRAINT PK_IDIOMAS_PROF PRIMARY KEY(COD_IDIOMA, DNI)
);